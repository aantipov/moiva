---
import ContentApp from '@/AiContentApp/AiContentApp.vue';
import type {
  NpmInfoApiResponseT,
  NpmCompareApiResponseT,
} from '@/shared-types';

interface Props {
  npmPackages: string[];
}
const { npmPackages } = Astro.props;

const promises = npmPackages.map(
  (pkg) =>
    fetch(`${Astro.url.origin}/npm-info/${encodeURIComponent(pkg)}`).then(
      (res) => res.json()
    ) as Promise<NpmInfoApiResponseT>
);
// All errors will be handled in UI in order to achieve better SSR performance for happy cases
const data = await Promise.all(promises).catch((_error) => null);

// TODO: check if both packages exist

let aiComparisonContent = null;
// Fetch/Generate comparison data only if both packages exist
if (data && npmPackages.length === 2) {
  try {
    const param = encodeURIComponent(npmPackages[0] + '_vs_' + npmPackages[1]);
    const url = `${Astro.url.origin}/npm-compare/${param}`;
    aiComparisonContent = (await fetch(url).then((res) => {
      if (!res.ok) {
        if (res.status === 404) {
          return null;
        }
        throw new Error(res.statusText);
      }

      return res.json();
    })) as NpmCompareApiResponseT;
  } catch (error: any) {
    console.error(`[AiPackageInfo.astro]: ${error?.message}`, error);
  }
}
---

<div class="container antialiased content flex flex-col items-center">
  <ContentApp
    data={data || []}
    aiComparison={aiComparisonContent}
    packages={npmPackages}
    client:idle
  />
</div>
