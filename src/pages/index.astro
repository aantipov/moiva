---
import App from '@/App.vue';
import SearchApp from '@/SearchApp/SearchApp.vue';
import PopularApp from '@/astro-components/Popular.astro';
import MainLayout from '@/layouts/Main.astro';
import WithSearchHeader from '@/layouts/WithSearchHeaderLayout.astro';
import AiPackageInfo from '@/astro-components/AiPackageInfo.astro';
import { isSEOPage, getSEOTitle, getSEODescription } from '@/ssrHelper';
import { constructHref } from '@/utils';

export const prerender = false;

const npmPackages = Astro.url.searchParams.get('npm')?.split(' ') || [];
const canonicalUrl = constructHref(npmPackages);
const isSEO = isSEOPage(npmPackages);
const seoTitle = getSEOTitle(npmPackages);
const seoDescription = getSEODescription(npmPackages);
const isHomePage = !npmPackages.length;
// const userAgent = Astro.request.headers.get('user-agent');
// const isBot =
//   !!userAgent && userAgent.match(/bot|crawler|slurp|spider|google|bing|yahoo/i);
---

{
  isHomePage ? (
    <MainLayout>
      <div class="flex-grow">
        <div class="content container mb-10 mt-8 antialiased">
          <div class="flex justify-center">
            <div class="w-11/12 sm:w-3/4 xl:w-1/2">
              <SearchApp isMainAppPage={false} client:load />
            </div>
          </div>
          <PopularApp />
        </div>
      </div>
    </MainLayout>
  ) : (
    <WithSearchHeader
      isMainAppPage={true}
      seoTitle={seoTitle}
      seoDescription={seoDescription}
      canonicalUrl={canonicalUrl}
      allowSearchEngineCrawling={isSEO}
    >
      <AiPackageInfo npmPackages={npmPackages} slot="before-default" />
      <App client:only="vue" />
    </WithSearchHeader>
  )
}
